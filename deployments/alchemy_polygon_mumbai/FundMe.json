{
  "address": "0x0205bbE0D4d444f4677Ff39f257959BE67f9bC2B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregatorPriceFeedAddress",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_minimum_fund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9ac8f4397bab1f16f9f543cf0b902acca40b02feac88d9e7c94df36dbdc1fabb",
  "receipt": {
    "to": null,
    "from": "0x3Cf55BbF3Ad175508427536A6189A4a4A8635aF4",
    "contractAddress": "0x0205bbE0D4d444f4677Ff39f257959BE67f9bC2B",
    "transactionIndex": 0,
    "gasUsed": "948638",
    "logsBloom": "0x
    "blockHash": "0xf5abbd5476c5f789d516b84e6ad73151d41e78e0e6876d84fee2297a91b6d987",
    "transactionHash": "0x9ac8f4397bab1f16f9f543cf0b902acca40b02feac88d9e7c94df36dbdc1fabb",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 27413285,
        "transactionHash": "0x9ac8f4397bab1f16f9f543cf0b902acca40b02feac88d9e7c94df36dbdc1fabb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000003cf55bbf3ad175508427536a6189a4a4a8635af4",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000e41ebb847ad37e0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000210dd8c27f0787fb69270000000000000000000000000000000000000000000000000cfc97f822e92c8200000000000000000000000000000000000000000000210dd9a69dc30c763ca5",
        "logIndex": 0,
        "blockHash": "0xf5abbd5476c5f789d516b84e6ad73151d41e78e0e6876d84fee2297a91b6d987"
      }
    ],
    "blockNumber": 27413285,
    "cumulativeGasUsed": "948638",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0715A7794a1dc8e42615F059dD6e406A6594651A"
  ],
  "numDeployments": 1,
  "solcInputHash": "16396882a841588aa5d52c5366d9e744",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregatorPriceFeedAddress\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_minimum_fund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n// import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public aggregatorPriceFeedAddress;\\n\\n    constructor(address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        aggregatorPriceFeedAddress = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    function get_minimum_fund() public pure returns (uint256) {\\n        return MINIMUM_USD;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(aggregatorPriceFeedAddress) >=\\n                get_minimum_fund(),\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return aggregatorPriceFeedAddress.version();\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x2e3ffe1c4861640c1b33cd71b232df8bfad2af76c90b8d65635515a3b83fc8d2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface aggregatorPriceFeedAddress)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            aggregatorPriceFeedAddress\\n        );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface aggregatorPriceFeedAddress\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(aggregatorPriceFeedAddress);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x05ad42c4d5abf0f90136d8388115066d9ae07124fb0428651b8673746fa1592f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200113f3803806200113f833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610fc762000178600039600081816103e901526106850152610fc76000f3fe60806040526004361061008a5760003560e01c80636ff28d5a116100595780636ff28d5a14610140578063825950651461016b578063b60d428814610196578063dba6335f146101a0578063dc0d3dff146101cb57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d85780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100b8610340565b6040516100c59190610888565b60405180910390f35b6100d66103e7565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610906565b610627565b60405161010c9190610888565b60405180910390f35b34801561012157600080fd5b5061012a61063f565b6040516101379190610888565b60405180910390f35b34801561014c57600080fd5b5061015561064c565b6040516101629190610992565b60405180910390f35b34801561017757600080fd5b50610180610672565b60405161018d9190610888565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101b5610683565b6040516101c291906109bc565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed9190610a03565b6106a7565b6040516101ff91906109bc565b60405180910390f35b610210610672565b610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106e690919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610a8d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610adc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103aa57600080fd5b505afa1580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190610b47565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105175760006001828154811061049257610491610b74565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050f90610ba3565b91505061046f565b50600067ffffffffffffffff81111561053357610532610bec565b5b6040519080825280602002602001820160405280156105615781602001602082028036833780820191505090505b50600190805190602001906105779291906107c8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059e90610c4c565b60006040518083038185875af1925050503d80600081146105db576040519150601f19603f3d011682016040523d82523d6000602084013e6105e0565b606091505b5050905080610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610cad565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b1880000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106106b757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106f283610722565b90506000670de0b6b3a7640000858361070b9190610ccd565b6107159190610d56565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610dff565b5050509150506402540be400816107bf9190610e7a565b92505050919050565b828054828255906000526020600020908101928215610841579160200282015b828111156108405782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107e8565b5b50905061084e9190610852565b5090565b5b8082111561086b576000816000905550600101610853565b5090565b6000819050919050565b6108828161086f565b82525050565b600060208201905061089d6000830184610879565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d3826108a8565b9050919050565b6108e3816108c8565b81146108ee57600080fd5b50565b600081359050610900816108da565b92915050565b60006020828403121561091c5761091b6108a3565b5b600061092a848285016108f1565b91505092915050565b6000819050919050565b600061095861095361094e846108a8565b610933565b6108a8565b9050919050565b600061096a8261093d565b9050919050565b600061097c8261095f565b9050919050565b61098c81610971565b82525050565b60006020820190506109a76000830184610983565b92915050565b6109b6816108c8565b82525050565b60006020820190506109d160008301846109ad565b92915050565b6109e08161086f565b81146109eb57600080fd5b50565b6000813590506109fd816109d7565b92915050565b600060208284031215610a1957610a186108a3565b5b6000610a27848285016109ee565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a77601b83610a30565b9150610a8282610a41565b602082019050919050565b60006020820190508181036000830152610aa681610a6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ae78261086f565b9150610af28361086f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2757610b26610aad565b5b828201905092915050565b600081519050610b41816109d7565b92915050565b600060208284031215610b5d57610b5c6108a3565b5b6000610b6b84828501610b32565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bae8261086f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be157610be0610aad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c36600083610c1b565b9150610c4182610c26565b600082019050919050565b6000610c5782610c29565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c97600b83610a30565b9150610ca282610c61565b602082019050919050565b60006020820190508181036000830152610cc681610c8a565b9050919050565b6000610cd88261086f565b9150610ce38361086f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d1c57610d1b610aad565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d618261086f565b9150610d6c8361086f565b925082610d7c57610d7b610d27565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da681610d87565b8114610db157600080fd5b50565b600081519050610dc381610d9d565b92915050565b6000819050919050565b610ddc81610dc9565b8114610de757600080fd5b50565b600081519050610df981610dd3565b92915050565b600080600080600060a08688031215610e1b57610e1a6108a3565b5b6000610e2988828901610db4565b9550506020610e3a88828901610dea565b9450506040610e4b88828901610b32565b9350506060610e5c88828901610b32565b9250506080610e6d88828901610db4565b9150509295509295909350565b6000610e8582610dc9565b9150610e9083610dc9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ecf57610ece610aad565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f0c57610f0b610aad565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f4957610f48610aad565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f8657610f85610aad565b5b82820290509291505056fea2646970667358221220e8b8be8d0a7f17f172168ac05b21f5c687d9d3bd8bbf7f2189671f1d5d8decbd64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636ff28d5a116100595780636ff28d5a14610140578063825950651461016b578063b60d428814610196578063dba6335f146101a0578063dc0d3dff146101cb57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d85780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100b8610340565b6040516100c59190610888565b60405180910390f35b6100d66103e7565b005b3480156100e457600080fd5b506100ff60048036038101906100fa9190610906565b610627565b60405161010c9190610888565b60405180910390f35b34801561012157600080fd5b5061012a61063f565b6040516101379190610888565b60405180910390f35b34801561014c57600080fd5b5061015561064c565b6040516101629190610992565b60405180910390f35b34801561017757600080fd5b50610180610672565b60405161018d9190610888565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101b5610683565b6040516101c291906109bc565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed9190610a03565b6106a7565b6040516101ff91906109bc565b60405180910390f35b610210610672565b610245600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106e690919063ffffffff16565b1015610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027d90610a8d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610adc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103aa57600080fd5b505afa1580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190610b47565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046c576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105175760006001828154811061049257610491610b74565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061050f90610ba3565b91505061046f565b50600067ffffffffffffffff81111561053357610532610bec565b5b6040519080825280602002602001820160405280156105615781602001602082028036833780820191505090505b50600190805190602001906105779291906107c8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161059e90610c4c565b60006040518083038185875af1925050503d80600081146105db576040519150601f19603f3d011682016040523d82523d6000602084013e6105e0565b606091505b5050905080610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90610cad565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b1880000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106106b757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106f283610722565b90506000670de0b6b3a7640000858361070b9190610ccd565b6107159190610d56565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610dff565b5050509150506402540be400816107bf9190610e7a565b92505050919050565b828054828255906000526020600020908101928215610841579160200282015b828111156108405782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107e8565b5b50905061084e9190610852565b5090565b5b8082111561086b576000816000905550600101610853565b5090565b6000819050919050565b6108828161086f565b82525050565b600060208201905061089d6000830184610879565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d3826108a8565b9050919050565b6108e3816108c8565b81146108ee57600080fd5b50565b600081359050610900816108da565b92915050565b60006020828403121561091c5761091b6108a3565b5b600061092a848285016108f1565b91505092915050565b6000819050919050565b600061095861095361094e846108a8565b610933565b6108a8565b9050919050565b600061096a8261093d565b9050919050565b600061097c8261095f565b9050919050565b61098c81610971565b82525050565b60006020820190506109a76000830184610983565b92915050565b6109b6816108c8565b82525050565b60006020820190506109d160008301846109ad565b92915050565b6109e08161086f565b81146109eb57600080fd5b50565b6000813590506109fd816109d7565b92915050565b600060208284031215610a1957610a186108a3565b5b6000610a27848285016109ee565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a77601b83610a30565b9150610a8282610a41565b602082019050919050565b60006020820190508181036000830152610aa681610a6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ae78261086f565b9150610af28361086f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2757610b26610aad565b5b828201905092915050565b600081519050610b41816109d7565b92915050565b600060208284031215610b5d57610b5c6108a3565b5b6000610b6b84828501610b32565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bae8261086f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610be157610be0610aad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c36600083610c1b565b9150610c4182610c26565b600082019050919050565b6000610c5782610c29565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c97600b83610a30565b9150610ca282610c61565b602082019050919050565b60006020820190508181036000830152610cc681610c8a565b9050919050565b6000610cd88261086f565b9150610ce38361086f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d1c57610d1b610aad565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d618261086f565b9150610d6c8361086f565b925082610d7c57610d7b610d27565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610da681610d87565b8114610db157600080fd5b50565b600081519050610dc381610d9d565b92915050565b6000819050919050565b610ddc81610dc9565b8114610de757600080fd5b50565b600081519050610df981610dd3565b92915050565b600080600080600060a08688031215610e1b57610e1a6108a3565b5b6000610e2988828901610db4565b9550506020610e3a88828901610dea565b9450506040610e4b88828901610b32565b9350506060610e5c88828901610b32565b9250506080610e6d88828901610db4565b9150509295509295909350565b6000610e8582610dc9565b9150610e9083610dc9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ecf57610ece610aad565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f0c57610f0b610aad565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f4957610f48610aad565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f8657610f85610aad565b5b82820290509291505056fea2646970667358221220e8b8be8d0a7f17f172168ac05b21f5c687d9d3bd8bbf7f2189671f1d5d8decbd64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "aggregatorPriceFeedAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}